CMAKE_MINIMUM_REQUIRED(VERSION 3.2)

MESSAGE("CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
MESSAGE("CMAKE_GENERATOR: ${CMAKE_GENERATOR}")
MESSAGE("CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")

PROJECT(dazzle C)

OPTION(DAZZLE_EXTERNAL_BUILD "DAZZLE_EXTERNAL_BUILD" OFF)
OPTION(DAZZLE_EDITOR_BUILD "DAZZLE_EDITOR_BUILD" ON)
OPTION(DAZZLE_EXAMPLE_BUILD "DAZZLE_EXAMPLE_BUILD" ON)
OPTION(DAZZLE_INSTALL "DAZZLE_INSTALL" OFF)
OPTION(DAZZLE_TESTS "DAZZLE_TESTS" OFF)
OPTION(DAZZLE_TESTS_IN_SOLUTIONS "DAZZLE_TESTS_IN_SOLUTIONS" ON)

MESSAGE("DAZZLE_EXTERNAL_BUILD: ${DAZZLE_EXTERNAL_BUILD}")
MESSAGE("DAZZLE_EDITOR_BUILD: ${DAZZLE_EDITOR_BUILD}")
MESSAGE("DAZZLE_EXAMPLE_BUILD: ${DAZZLE_EXAMPLE_BUILD}")
MESSAGE("DAZZLE_INSTALL: ${DAZZLE_INSTALL}")
MESSAGE("DAZZLE_TESTS: ${DAZZLE_TESTS}")
MESSAGE("DAZZLE_TESTS_IN_SOLUTIONS: ${DAZZLE_TESTS_IN_SOLUTIONS}")

IF(NOT DAZZLE_EXTERNAL_BUILD)
    set(CMAKE_C_STANDARD 11)
    
    if(${CMAKE_C_COMPILER_ID} STREQUAL Clang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL AppleClang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL GNU)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL Intel)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /Wall /WX")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd5045")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4668")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4710")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4738")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4820")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4711")
    endif()
    
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib/${CMAKE_GENERATOR})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin/${CMAKE_GENERATOR})
    
    if(MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /DWIN32 /D_WINDOWS")
        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /D_DEBUG /ZI /Ob0 /Od /RTC1")
        set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /DNDEBUG /O2 /Oi /Ot /GL")
        
        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MTd")
        set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT")
    
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /D_CRT_SECURE_NO_WARNINGS")
    endif()
ENDIF()

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

SET(DAZZLE_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(DAZZLE_SOURCE_DIR ${DAZZLE_ROOT_DIR}/src)
SET(DAZZLE_INCLUDE_DIR ${DAZZLE_ROOT_DIR}/include)
SET(DAZZLE_DEPENDENCIES_DIR ${DAZZLE_ROOT_DIR}/dependencies)

set(DAZZLE_SOURCES
    ${DAZZLE_SOURCE_DIR}/dazzle.c
    ${DAZZLE_SOURCE_DIR}/alloc.h
)

set(DAZZLE_HEADERS
    ${DAZZLE_INCLUDE_DIR}/dazzle/config.h
    ${DAZZLE_INCLUDE_DIR}/dazzle/dazzle.h
)

include_directories(${PROJECT_NAME} ${DAZZLE_INCLUDE_DIR})

add_library(${PROJECT_NAME} STATIC ${DAZZLE_SOURCES} ${DAZZLE_HEADERS})

if(DAZZLE_INSTALL)
    install(DIRECTORY include
        DESTINATION .
        FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h")

    install(TARGETS ${PROJECT_NAME}
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION lib)
endif()

if(DAZZLE_TESTS)
    include(CTest)
    enable_testing()
    
    add_subdirectory(tests)
else()
    if(DAZZLE_EDITOR_BUILD)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/macro.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/glad_download.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/glfw_download.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/stb_libs_download.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/imgui_download.cmake)
    
        add_subdirectory(editor)
    endif()

    if(DAZZLE_EXAMPLE_BUILD)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/macro.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/glad_download.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/glfw_download.cmake)
        include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/stb_libs_download.cmake)
        
        add_subdirectory(example)
    endif()

    if(DAZZLE_TESTS_IN_SOLUTIONS)
        add_subdirectory(tests)
    endif()
endif()